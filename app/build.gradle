apply plugin: 'com.android.application'

def verCode = 14
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.jning.unittest"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionCode verCode
        versionName "1.0"
        versionName APP_VERSION
    }


    signingConfigs {
//        debug {
//            keyAlias ALIAS_NAME
////            keyPassword 'Jning.H'
//            keyPassword ALIAS_PWD
//            storeFile file(STORE_FILE)
////            storePassword 'Jning0213.'
//            storePassword STORE_PWD
//        }
        release {
            keyAlias ALIAS_NAME
            keyPassword ALIAS_PWD
            if ("true".equals(IS_JENKINS)) {
                storeFile file(STORE_FILE)
            }else{
                storeFile file('C:/Test/JningKey.jks')
            }
            storePassword STORE_PWD
        }
    }

    buildTypes {
        debug {
            minifyEnabled false // 是否混淆
            shrinkResources false//  开混淆的时候才能开启 是否去除无效的资源文件
//            applicationIdSuffix '.debug'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
//            applicationIdSuffix '.test'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    //渠道Flavors
    productFlavors {
        xiaomi {//0
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:"xiaomi"]
        }
        wandoujianame {//1
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:"wandoujiavalue"]
        }
    }

    //修改生成的apk名字及输出文件夹
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            //新名字
            def newName
            //时间戳
            def timeNow
            //输出文件夹
            def outDirectory
            //是否为Jenkins打包，输出路径不同
            if ("true".equals(IS_JENKINS)) {
                //BUILD_PATH为服务器输出路径
                timeNow = BUILD_TIME//TODO 只能写死？（或许是在Jenkins上配置）
                outDirectory = BUILD_PATH_JENKINS
                //JKApp-v1.0.1-xiaomi-release.apk
//                newName = APP_NAME+"-v"+APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + "_jenkins" +'.apk'
                newName = APP_NAME+"-v${defaultConfig.versionName}" + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + "_jenkins_${getData()}" + '.apk'
            } else {
                //本机打包输出在本机路径
                timeNow = getDate()
                outDirectory = BUILD_PATH_LOCAL
                newName = APP_NAME+"-v${defaultConfig.versionName}" + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + "_local_"+ timeNow + '.apk'
            }
            output.outputFile = new File(outDirectory+"/"+timeNow, newName)
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
}
